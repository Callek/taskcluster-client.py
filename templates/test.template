#!/usr/bin/env python
# -*- coding: utf-8 -*-
{{generatedString}}
from __future__ import absolute_import, division, print_function

from base import FakeGenerated, GeneratedTC
from taskcluster.sync import {{serviceName}}


class Fake{{serviceName}}(FakeGenerated, {{serviceName}}):
    pass


class Test{{serviceName}}(GeneratedTC):
    """Test the generated Test{{serviceName}} class.
    """
    testClass = Fake{{serviceName}}

    def test_urls(self):
        """Test{{serviceName}} | all urls match the json baseUrls
        """
        self.url_check('{{serviceName}}')

    def test_routingKeys(self):
        """Test{{serviceName}} | all routingKeys match the json routingKeys
        """
        self.routingKeys_check('{{serviceName}}')

{%- if api.entries -%}
    {%- for entry in api['entries'] -%}
        {%- if entry['type'] == 'function' %}

    def test_{{entry.name}}_unsigned(self):
        """Test{{serviceName}} | {{serviceName}}.{{entry.name}} unsigned
        """
        self.try_function(
            '{{entry.name}}',
            '{{entry.method}}',
            argumentNames=[{{argumentString(entry)}}],
            signUrl=False
        )

            {%- if entry['method'] == 'get' %}{# get methods can be signed/unsigned #}

    def test_{{entry.name}}_signed(self):
        """Test{{serviceName}} | {{serviceName}}.{{entry.name}} signed
        """
        self.try_function(
            '{{entry.name}}',
            '{{entry.method}}',
            argumentNames=[{{argumentString(entry)}}],
            signUrl=True
        )

            {%- endif %}
        {%- elif entry['type'] == 'topic-exchange' %}

    def test_{{entry['name']}}(self):
        """Test{{serviceName}} | {{serviceName}}.{{entry.name}} topic exchange
        """
        self.try_topic('{{entry.name}}', '{{entry.exchange}}')

        {%- endif -%}
    {%- endfor -%}
{%- endif -%}
